{"version":3,"sources":["liff_inital_js_template_v3.js"],"names":["GetLiffId","InitializeLineLiffSdk","liff","liffId","then","alert","Login","isLoggedIn","KeepInitializeLineLiffSdk","catch","err","code","message","console","log","isClient","getOS","userAccessToken","isInClient","contextViewType","contextUserId","getAccessToken","contextUtouId","getDecodedIDToken","contextRoomId","getContext","contextType","context","contextGroupId","viewType","userId","utouId","profileDisplayName","roomId","profilePictureUrl","groupId","profileUserId","profileStatusMessage","profile","displayName","pictureUrl","statusMessage","decodeedIdToken","os","login","$","document","ready","test","navigator","userAgent","show","hide"],"mappings":"aAeA,SAASA,YAEP,MAAO,sBAIT,SAASC,wBACPC,KAEIC,KAAM,CAEPC,OAAKJ,cAEFK,KAAAA,WACAC,OAAKJ,KAAAK,cAIPC,QAAAA,IAAAA,iBAGDC,8BANGJ,MAAO,iEACRC,SADQ,KARbG,MAAA,SAAAC,GAkBDL,MAAAK,EAAAC,MAFKN,MAAMK,EAAIE,WAOd,SAAMJ,4BAGNK,QAAAC,IAAA,QACA,IAAIC,EAAAA,KAAQC,QAKRC,EAAAA,KAAeC,aAKfC,EAAAA,KAAkBZ,aAClBa,EAAJlB,KAAAmB,iBACIC,EAAJpB,KAAAqB,oBACIC,EAAAA,KAAaC,aAJbC,EAAc,GAOhBA,EAAcC,GACdR,EAAkBQ,GAClBP,EAAgBO,GAChBL,EAAgBK,GACH,OAAbH,IACAI,EAAcD,EAAGA,KAClBA,EAAAE,SAJCT,EAAgBO,EAAQG,OAM1BR,EAAiBK,EAAjBI,OACAP,EAAIQ,EAAqBC,OACzBL,EAAIM,EAAJC,SAKIC,IAAAA,EACAJ,EACAE,EACAG,EANJnC,KASIW,aACAA,KAAAA,SAAOyB,GACPzB,EAAYyB,EAAAR,OACZjB,EAAYyB,EAAAC,YAPZL,EAAoBI,EAAQE,WAU5B3B,EAAAyB,EAAAG,cAGA5B,QAAQC,IAAI,gBAAmBG,GAC/BJ,QAAQC,IAAI,qBAAmB4B,GAC/B7B,QAAQC,IAAI,oBAAeY,GAC3Bb,QAAQC,IAAI,uBAAiBM,GAG7BP,QAAQC,IAAI,KAAA6B,GAEblC,QAAMK,IAAA,WAASC,GACdV,QAAUM,IAAL,aAALJ,GACAF,QAAUO,IAAAA,kBAAVK,GA5BJJ,QAAAC,IAAA,kBAAA4B,GA8BD7B,QAAAC,IAAA,cAAAY,GATKb,QAAQC,IAAI,gBAAiBM,GAWnCP,QAAAC,IAAiB,gBAAAQ,GACfT,QAAAC,IAAA,gBAAAU,GACAX,QAAAC,IAAA,iBAAAc,KAGA1B,MAAK0C,SAALlC,GACDL,MAAAK,EAAAC,MAVKN,MAAMK,EAAIE,WAIhB,SAASN,QAKPJ,KAAK0C,QAjHPC,EAAEC,UAAUC,MAAM,WAAhBD,iEAA4BE,KAAAC,UAAAC,YAE1BrC,QAAAC,IAAA,UAGAb,0BAIA4C,EAAE,WAAWM,OACbN,EAAE,aAAaO","file":"liff_inital_js_template_v3.js","sourcesContent":["\r\n$(document).ready(function () {\r\n  if (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {\r\n    //mobile:只顯示網頁，讓人用掃的才能開啟\r\n    console.log('mobile');\r\n    //LIFF初始化是這段\r\n    InitializeLineLiffSdk();\r\n\r\n  } else {\r\n    //pc:顯示qrcode\r\n    $('#QRCode').show();\r\n    $('#mainBody').hide();\r\n  }\r\n});\r\n\r\nfunction GetLiffId() {\r\n  //這段會依照每個帳戶不同更改\r\n  return \"1654884078-0nYB68dJ\";\r\n}\r\n\r\n//liff.init()初始化\r\nfunction InitializeLineLiffSdk() {\r\n  liff\r\n    .init({\r\n      liffId: GetLiffId(),\r\n    })\r\n    .then(() => {\r\n      if (!liff.isLoggedIn()) {\r\n        alert(\"[Note] you're not login line now. It will turn to login page!\");\r\n        Login();\r\n        return false;\r\n      }\r\n      console.log('login OK')\r\n      KeepInitializeLineLiffSdk();\r\n            // 2021-03-16\r\n    })\r\n    .catch((err) => {\r\n      alert(err.code);\r\n      alert(err.message);\r\n    });\r\n}\r\n\r\nfunction KeepInitializeLineLiffSdk() {\r\n  console.log('keep')\r\n      // start to use LIFF's api\r\n  var os = liff.getOS();\r\n\r\n  //true: Running in LINE browser\r\n  //false: Running in external browser\r\n  var isClient = liff.isInClient();\r\n\r\n  //true: The user is logged in\r\n  //false: The user is not logged in\r\n  var isLoggedIn = liff.isLoggedIn();\r\n  var userAccessToken = liff.getAccessToken();\r\n  var decodeedIdToken = liff.getDecodedIDToken();\r\n  var context = liff.getContext();\r\n\r\n  var contextType = \"\";\r\n  var contextViewType = \"\";\r\n  var contextUserId = \"\";\r\n  var contextUtouId = \"\";\r\n  var contextRoomId = \"\";\r\n  var contextGroupId = \"\";\r\n  if (context !== null) {\r\n    contextType = context.type;\r\n    contextViewType = context.viewType;\r\n    contextUserId = context.userId;\r\n    contextUtouId = context.utouId;\r\n    contextRoomId = context.roomId;\r\n    contextGroupId = context.groupId;\r\n  }\r\n\r\n  var profileUserId = \"\";\r\n  var profileDisplayName = \"\";\r\n  var profilePictureUrl = \"\";\r\n  var profileStatusMessage = \"\";\r\n  liff\r\n    .getProfile()\r\n    .then((profile) => {\r\n      profileUserId = profile.userId;\r\n      profileDisplayName = profile.displayName;\r\n      profilePictureUrl = profile.pictureUrl;\r\n      profileStatusMessage = profile.statusMessage;\r\n\r\n      //getProfile取得的資訊\r\n      console.log(\"profileUserId\", profileUserId);\r\n      console.log(\"profileDisplayName\", profileDisplayName);\r\n      console.log(\"profilePictureUrl\", profilePictureUrl);\r\n      console.log(\"profileStatusMessage\", profileStatusMessage);\r\n\r\n      //前面取得的資訊\r\n      console.log(\"os\", os);\r\n      console.log(\"isClient\", isClient);\r\n      console.log(\"isLoggedIn\", isLoggedIn);\r\n      console.log(\"userAccessToken\", userAccessToken);\r\n      console.log(\"decodeedIdToken\", decodeedIdToken);\r\n      console.log(\"contextType\", contextType);\r\n      console.log(\"contextUserId\", contextUserId);\r\n      console.log(\"contextUtouId\", contextUtouId);\r\n      console.log(\"contextRoomId\", contextRoomId);\r\n      console.log(\"contextGroupId\", contextGroupId);\r\n    })\r\n    .catch((err) => {\r\n      alert(err.code);\r\n      alert(err.message);\r\n    });\r\n}\r\n\r\nfunction Login() {\r\n  //liff.login({\r\n  //    redirectUri: 'https://www.google.com/'\r\n  //});\r\n\r\n  liff.login();\r\n}\r\n"]}