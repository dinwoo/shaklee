{"version":3,"sources":["liff_inital_js_template_v3.js"],"names":["ArrLiffQueryString","EncodeQuertstring","GetLiffId","DecondeUtf8","decodestring","decodeString","console","GetArrQueryString","queryString","strUrl","getPara","ParaVal","indexOf","split","getSearch","i","aryPara","push","location","search","GetInLiffAppQuertString","length","InitializeLineLiffSdk","liffId","liff","init","then","isLoggedIn","getFriendship","data","KeepInitializeLineLiffSdk","alert","message","err","code","catch","isClient","getOS","userAccessToken","isInClient","contextViewType","getAccessToken","getDecodedIDToken","contextRoomId","getContext","context","viewType","userId","utouId","profileDisplayName","roomId","profilePictureUrl","groupId","getProfile","profile","displayName","pictureUrl","statusMessage","Login","login","$","document","DecodeQueryString"],"mappings":"aAAA,IAAIA,mBACAC,kBADAD,kBACAC,eAcJ,SAASC,YACP,MAAA,sBAIF,SAASC,YAAYC,GAArBC,EAAqBD,mBAAcA,GAEjCE,OAAOD,EAIT,SAASE,kBAAkBC,GAA3B,IACeA,EADfC,EAASF,EAEHG,EAASC,GAGb,IAA6B,IAAzBF,EAAOG,QAAQ,KAAa,CAAhC,IACEF,EADED,EAAAI,MAAJ,KACkBJ,GAAOI,MAAM,KAC7BH,IAAAA,EAAO,EAAGI,EAAAA,EAAaD,OAAbE,IAERJ,EAAUD,EAAQK,GAAGF,MAAM,KAD7BG,EAAAC,KAAaN,EAAU,IACrBA,EAAOA,EAAGD,IAAWG,EAAX,GAIb,OAAAG,EAED,SAAOA,0BACR,IAIcL,EAJdF,EAAAS,SAAAC,OAEDH,EAASI,GAEP,IAAA,IAAIV,EAAJE,QAAaD,KAAb,CACA,IAIED,EAJFD,EAAAI,MAAA,KAIsB,GAAGA,MAAM,KAF/B,IAAIJ,EAAOG,EAAAA,EAAPF,EAAAW,OAA4BN,IAC9BJ,EAAIG,EAAYL,GAAOI,MAAM,KAC7BH,EAAUI,KAAAA,EAAaD,IAIrBG,EAAQL,EAAQ,IAAMA,EAAQ,GAA9BK,OAAAA,EAGJV,SAAOgB,sBAAPC,GACAC,KAGFC,KAAA,CAIMF,OAAQrB,cAHdwB,KAASJ,WACH,OAAJE,KACQG,kBAUJH,KAEGI,gBACAF,KAAK,SAACG,GADND,EAAAA,YAuCEE,8BAIDC,MAAS,SAACC,GA5CdD,MAAAE,EAAAC,MAZJH,MA2DSE,EAAAD,YAzDLT,MAAQrB,iEAETwB,SACWC,KALdQ,MAAA,SAAAF,GA+DDF,MAAAE,EAAAC,MAFKH,MAAME,EAAID,WASd,SAAAF,4BACIM,KAAQC,QAKRC,KAAeC,aAKfC,KAAkBb,aACtBH,KAAAiB,iBACAjB,KAAAkB,oBAZA,IAaIC,EAAAA,KAAaC,aAOF,OAAbD,IACcE,EAAGA,KAClBA,EAAAC,SAJiBD,EAAQE,OAMTF,EAAjBG,OACIC,EAAqBC,OACrBC,EAAJC,SAWI5B,KACA6B,aACA3B,KAAA,SAAA4B,GACAA,EAAAP,OAEAO,EAAAC,YACAD,EAAAE,WACAF,EAAAG,gBA6BDtB,MAAM,SAACF,GACNF,MAAME,EAAIC,MACVH,MAAME,EAAID,WAIhB,SAAS0B,QAKPlC,KAAKmC,QAzNPC,EAAAC,UAAIC,MAAAA,WAEFD,wBAKA7D,mBAAqBoB,0BAArBpB,kBAAkBA,mBAAGoB,cACrBnB,kBAAoBD,YAAAA,mBACpB8D,eAAiBvD,kBAAeN","file":"liff_inital_js_template_v3.js","sourcesContent":["var ArrLiffQueryString;\nvar EncodeQuertstring;\nvar DecodeQueryString;\nvar ArrQuertString;\n$(document).ready(function () {\n  //LIFF初始化是這段\n  InitializeLineLiffSdk();\n\n  //這邊是解LIFF導轉之後特有的解QueryString\n  ArrLiffQueryString = GetInLiffAppQuertString();\n  EncodeQuertstring = ArrLiffQueryString[\"liff.state\"];\n  DecodeQueryString = DecondeUtf8(EncodeQuertstring);\n  ArrQuertString = GetArrQueryString(DecodeQueryString);\n});\n\nfunction GetLiffId() {\n  //這段會依照每個帳戶不同更改\n  return \"1654884078-0nYB68dJ\";\n}\n\nfunction DecondeUtf8(decodestring) {\n  var decodeString = decodeURIComponent(decodestring);\n  console.log(decodeString);\n  return decodeString;\n}\n\nfunction GetArrQueryString(queryString) {\n  var strUrl = queryString;\n  var getPara, ParaVal;\n  var aryPara = [];\n\n  if (strUrl.indexOf(\"?\") !== -1) {\n    var getSearch = strUrl.split(\"?\");\n    getPara = getSearch[1].split(\"&\");\n    for (i = 0; i < getPara.length; i++) {\n      ParaVal = getPara[i].split(\"=\");\n      aryPara.push(ParaVal[0]);\n      aryPara[ParaVal[0]] = ParaVal[1];\n    }\n  }\n  console.log(aryPara);\n  return aryPara;\n}\n\nfunction GetInLiffAppQuertString() {\n  var strUrl = location.search;\n  var getPara, ParaVal;\n  var aryPara = [];\n\n  if (strUrl.indexOf(\"?\") !== -1) {\n    var getSearch = strUrl.split(\"?\");\n    getPara = getSearch[1].split(\"&\");\n    for (i = 0; i < getPara.length; i++) {\n      ParaVal = getPara[i].split(\"=\");\n      aryPara.push(ParaVal[0]);\n      aryPara[ParaVal[0]] = ParaVal[1];\n    }\n  }\n  console.log(aryPara);\n  return aryPara;\n}\n\n//liff.init()初始化\nfunction InitializeLineLiffSdk(liffId) {\n  liff\n    .init({\n      liffId: GetLiffId(),\n    })\n    .then(() => {\n      if (!liff.isLoggedIn()) {\n        alert(\"[Note] you're not login line now. It will turn to login page!\");\n        Login();\n        return false;\n      }\n\n      // 2021-03-16\n      liff\n        .getFriendship()\n        .then((data) => {\n          if (data.friendFlag) {\n            console.log(\"getFriendship true\");\n            console.log(\"getFriendship.data\", data);\n            console.log(\"getFriendship.data.friendFlag\", data.friendFlag);\n            //$.alert({\n            //    title: '是否已經加入官方LINE@帳號',\n            //    animation: 'zoom',\n            //    closeAnimation: 'scale',\n            //    content: \"您已經加入官方LINE@帳號，是否繼續？\",\n            //    buttons: {\n            //        OK: function () {\n            //            KeepInitializeLineLiffSdk();\n            //        },\n            //        NO: function () {\n            //            alert(\"881\");\n            //        }\n            //    }\n            //});\n          } else {\n            console.log(\"getFriendship false\");\n            console.log(\"getFriendship.data\", data);\n            //$.alert({\n            //    title: '是否已經加入官方LINE@帳號',\n            //    animation: 'zoom',\n            //    closeAnimation: 'scale',\n            //    content: \"您目前還沒有加入官方LINE@帳號，是否繼續？\",\n            //    buttons: {\n            //        OK: function () {\n            //            KeepInitializeLineLiffSdk();\n            //        },\n            //        NO: function () {\n            //            alert(\"881\");\n            //        }\n            //    }\n            //});\n\n            KeepInitializeLineLiffSdk();\n          }\n        })\n        .catch((err) => {\n          alert(err.code);\n          alert(err.message);\n        });\n    })\n    .catch((err) => {\n      alert(err.code);\n      alert(err.message);\n    });\n}\n\nfunction KeepInitializeLineLiffSdk() {\n  // start to use LIFF's api\n  var os = liff.getOS();\n\n  //true: Running in LINE browser\n  //false: Running in external browser\n  var isClient = liff.isInClient();\n\n  //true: The user is logged in\n  //false: The user is not logged in\n  var isLoggedIn = liff.isLoggedIn();\n  var userAccessToken = liff.getAccessToken();\n  var decodeedIdToken = liff.getDecodedIDToken();\n  var context = liff.getContext();\n\n  var contextType = \"\";\n  var contextViewType = \"\";\n  var contextUserId = \"\";\n  var contextUtouId = \"\";\n  var contextRoomId = \"\";\n  var contextGroupId = \"\";\n  if (context !== null) {\n    contextType = context.type;\n    contextViewType = context.viewType;\n    contextUserId = context.userId;\n    contextUtouId = context.utouId;\n    contextRoomId = context.roomId;\n    contextGroupId = context.groupId;\n  }\n\n  var profileUserId = \"\";\n  var profileDisplayName = \"\";\n  var profilePictureUrl = \"\";\n  var profileStatusMessage = \"\";\n  liff\n    .getProfile()\n    .then((profile) => {\n      profileUserId = profile.userId;\n      profileDisplayName = profile.displayName;\n      profilePictureUrl = profile.pictureUrl;\n      profileStatusMessage = profile.statusMessage;\n\n      //getProfile取得的資訊\n      // $(\"#profileUserId\").text(profileUserId);\n      // $(\"#profileDisplayName\").text(profileDisplayName);\n      // $(\"#profilePictureUrl\").text(profilePictureUrl);\n      // $(\"#profileStatusMessage\").text(profileStatusMessage);\n\n      //前面取得的資訊\n      // $(\"#os\").text(os);\n      // $(\"#isClient\").text(isClient);\n      // $(\"#isLoggedIn\").text(isLoggedIn);\n      // $(\"#userAccessToken\").text(userAccessToken);\n      // $(\"#decodeedIdToken\").text(decodeedIdToken);\n      // $(\"#contextType\").text(contextType);\n      // $(\"#contextViewType\").text(contextViewType);\n      // $(\"#contextUserId\").text(contextUserId);\n      // $(\"#contextUtouId\").text(contextUtouId);\n      // $(\"#contextRoomId\").text(contextRoomId);\n      // $(\"#contextGroupId\").text(contextGroupId);\n\n      //getProfile取得的資訊\n      console.log(\"profileUserId\", profileUserId);\n      console.log(\"profileDisplayName\", profileDisplayName);\n      console.log(\"profilePictureUrl\", profilePictureUrl);\n      console.log(\"profileStatusMessage\", profileStatusMessage);\n\n      //前面取得的資訊\n      console.log(\"os\", os);\n      console.log(\"isClient\", isClient);\n      console.log(\"isLoggedIn\", isLoggedIn);\n      console.log(\"userAccessToken\", userAccessToken);\n      console.log(\"decodeedIdToken\", decodeedIdToken);\n      console.log(\"contextType\", contextType);\n      console.log(\"contextUserId\", contextUserId);\n      console.log(\"contextUtouId\", contextUtouId);\n      console.log(\"contextRoomId\", contextRoomId);\n      console.log(\"contextGroupId\", contextGroupId);\n    })\n    .catch((err) => {\n      alert(err.code);\n      alert(err.message);\n    });\n}\n\nfunction Login() {\n  //liff.login({\n  //    redirectUri: 'https://www.google.com/'\n  //});\n\n  liff.login();\n}\n"]}